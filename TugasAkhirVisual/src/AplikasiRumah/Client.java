/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AplikasiRumah;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
        tabel();
    }

      private void tabel() {
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id Client");
        tbl.addColumn("NIK");
        tbl.addColumn("Nama Client");
        tbl.addColumn("Nomor KK");
        tbl.addColumn("NPWP");
        tbl.addColumn("Asuransi");
        tbl.addColumn("Gaji");
        tbl.addColumn("Alamat");
        
        try {
            Statement st = (Statement)  koneksi.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM client");
            
            while (rs.next()){
             tbl.addRow(new Object[]{
                rs.getString("Id Client"),
                rs.getString("NIK"),
                rs.getString("Nama Client"),
                rs.getString("Nomor KK"),
                rs.getString("NPWP"),
                rs.getString("Asuransi"),
                rs.getString("Gaji"),
                rs.getString("Alamat"),
         
            });
             displayArea.setModel(tbl); 
        }
 //           JOptionPane.showMessageDialog(null, "Koneksi Database  Berhasil");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }
      
      private void clear() {
        // Clear the input fields
        idField.setText("");
        namaField.setText("");
        nikField.setText("");
        nokkField.setText("");
        npwpField.setText("");
        asuransiField.setText("");
        gajiField.setText("");
        alamatField.setText("");
        searchField.setText("");
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JLabel();
        simpan = new javax.swing.JLabel();
        ubah = new javax.swing.JLabel();
        hapus = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        gajiField = new javax.swing.JTextField();
        asuransiField = new javax.swing.JTextField();
        npwpField = new javax.swing.JTextField();
        nokkField = new javax.swing.JTextField();
        namaField = new javax.swing.JTextField();
        nikField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        alamatField = new javax.swing.JTextArea();
        search = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 30, 30));

        simpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpanMouseClicked(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 236, 66, 28));

        ubah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ubah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ubahMouseClicked(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 236, 66, 26));

        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hapusMouseClicked(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 236, 66, 26));

        searchField.setBorder(null);
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        getContentPane().add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 300, 144, -1));

        gajiField.setBackground(new java.awt.Color(229, 245, 255));
        gajiField.setBorder(null);
        gajiField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gajiFieldActionPerformed(evt);
            }
        });
        getContentPane().add(gajiField, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 198, 187, -1));

        asuransiField.setBackground(new java.awt.Color(229, 245, 255));
        asuransiField.setBorder(null);
        asuransiField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asuransiFieldActionPerformed(evt);
            }
        });
        getContentPane().add(asuransiField, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 198, 187, -1));

        npwpField.setBackground(new java.awt.Color(229, 245, 255));
        npwpField.setBorder(null);
        npwpField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npwpFieldActionPerformed(evt);
            }
        });
        getContentPane().add(npwpField, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 198, 187, -1));

        nokkField.setBackground(new java.awt.Color(229, 245, 255));
        nokkField.setBorder(null);
        nokkField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nokkFieldActionPerformed(evt);
            }
        });
        getContentPane().add(nokkField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 122, 146, -1));

        namaField.setBackground(new java.awt.Color(229, 245, 255));
        namaField.setBorder(null);
        namaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaFieldActionPerformed(evt);
            }
        });
        getContentPane().add(namaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 122, 146, -1));

        nikField.setBackground(new java.awt.Color(229, 245, 255));
        nikField.setBorder(null);
        nikField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nikFieldActionPerformed(evt);
            }
        });
        getContentPane().add(nikField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 122, 146, -1));

        idField.setBackground(new java.awt.Color(229, 245, 255));
        idField.setBorder(null);
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 122, 100, -1));

        displayArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(displayArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 340, 780, 150));

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setHorizontalScrollBar(null);

        alamatField.setBackground(new java.awt.Color(229, 245, 255));
        alamatField.setColumns(20);
        alamatField.setLineWrap(true);
        alamatField.setRows(5);
        alamatField.setBorder(null);
        alamatField.setMaximumSize(new java.awt.Dimension(165, 90));
        jScrollPane2.setViewportView(alamatField);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(692, 122, 165, -1));

        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 296, 39, 25));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id Client", "NIK", "Nama Client", "Nomor KK", "NPWP", "Asuransi", "Gaji", "Alamat" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 294, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AplikasiRumah/Data Client.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        Master MASTERPAGE = new Master();
        MASTERPAGE.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void simpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpanMouseClicked
        // TODO add your handling code here:
        String nik = nikField.getText();
        String nama = namaField.getText();
        String nokk = nokkField.getText();
        String alamat = alamatField.getText();
        String npwp = npwpField.getText();
        String asuransi = asuransiField.getText();
        double gaji = Double.parseDouble(gajiField.getText());

        String query = "INSERT INTO client (NIK, `Nama Client`, `Nomor KK`, `Alamat`, `NPWP`, `Asuransi`, `Gaji`) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try (Connection connection = koneksi.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setString(1, nik);
            preparedStatement.setString(2, nama);
            preparedStatement.setString(3, nokk);
            preparedStatement.setString(4, alamat);
            preparedStatement.setString(5, npwp);
            preparedStatement.setString(6, asuransi);
            preparedStatement.setDouble(7, gaji);
            preparedStatement.executeUpdate();
            tabel();
            clear();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_simpanMouseClicked

    private void ubahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ubahMouseClicked
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(idField.getText()); // Ambil ID dari form

            // Ambil data yang sudah ada dari database
            try (Connection connection = koneksi.getConnection()) {
                String selectQuery = "SELECT * FROM client WHERE `Id Client` = ?";
                PreparedStatement selectStatement = connection.prepareStatement(selectQuery);
                selectStatement.setInt(1, id);
                ResultSet resultSet = selectStatement.executeQuery();

                if (resultSet.next()) {
                    // Gunakan nilai dari database jika field tidak diubah
                    String nik = nikField.getText().isEmpty() ? resultSet.getString("NIK") : nikField.getText();
                    String nama = namaField.getText().isEmpty() ? resultSet.getString("Nama Client") : namaField.getText();
                    String nokk = nokkField.getText().isEmpty() ? resultSet.getString("Nomor KK") : nokkField.getText();
                    String alamat = alamatField.getText().isEmpty() ? resultSet.getString("Alamat") : alamatField.getText();
                    String npwp = npwpField.getText().isEmpty() ? resultSet.getString("NPWP") : npwpField.getText();
                    String asuransi = asuransiField.getText().isEmpty() ? resultSet.getString("Asuransi") : asuransiField.getText();
                    double gaji = gajiField.getText().isEmpty() ? resultSet.getDouble("Gaji") : Double.parseDouble(gajiField.getText());

                    // Query untuk update data
                    String updateQuery = "UPDATE client SET NIK = ?, `Nama Client` = ?, `Nomor KK` = ?, `Alamat` = ?, NPWP = ?, Asuransi = ?, Gaji = ? WHERE `Id Client` = ?";
                    PreparedStatement updateStatement = connection.prepareStatement(updateQuery);
                    updateStatement.setString(1, nik);
                    updateStatement.setString(2, nama);
                    updateStatement.setString(3, nokk);
                    updateStatement.setString(4, alamat);
                    updateStatement.setString(5, npwp);
                    updateStatement.setString(6, asuransi);
                    updateStatement.setDouble(7, gaji);
                    updateStatement.setInt(8, id);

                    int rowsAffected = updateStatement.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Data client berhasil diupdate!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                        tabel(); // Perbarui tampilan
                    } else {
                        JOptionPane.showMessageDialog(this, "Gagal mengupdate data client.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Client dengan ID tersebut tidak ditemukan", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengupdate data client: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID Client harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ubahMouseClicked

    private void hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseClicked
        // TODO add your handling code here:
        int id = Integer.parseInt(idField.getText());

        String query = "DELETE FROM client WHERE `Id Client` = ?";
        try (Connection connection = koneksi.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
            tabel();
            clear();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_hapusMouseClicked

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
        try{
            Statement st = (Statement)  koneksi.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM client WHERE `client` . `Id Client`= '"+idField.getText()+"'");

           while (rs.next()) {
                idField.setText(rs.getString("Id Client"));
                nikField.setText(rs.getString("NIK"));
                namaField.setText(rs.getString("Nama Client"));
                nokkField.setText(rs.getString("Nomor KK"));
                npwpField.setText(rs.getString("NPWP"));
                asuransiField.setText(rs.getString("Asuransi"));
                gajiField.setText(rs.getString("Gaji"));
                alamatField.setText(rs.getString("Alamat"));
            }
            
       }catch(Exception e){
            JOptionPane.showMessageDialog(null,"GAGAL");
        }
        tabel();
    }//GEN-LAST:event_idFieldActionPerformed

    private void nikFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nikFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nikFieldActionPerformed

    private void namaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaFieldActionPerformed

    private void nokkFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nokkFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nokkFieldActionPerformed

    private void npwpFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npwpFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_npwpFieldActionPerformed

    private void asuransiFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asuransiFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asuransiFieldActionPerformed

    private void gajiFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gajiFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gajiFieldActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
               DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id Client");
        tbl.addColumn("NIK");
        tbl.addColumn("Nama Client");
        tbl.addColumn("Nomor KK");
        tbl.addColumn("NPWP");
        tbl.addColumn("Asuransi");
        tbl.addColumn("Gaji");
        tbl.addColumn("Alamat");

        try {
            Statement st = (Statement) koneksi.getConnection().createStatement();
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchText = searchField.getText();

            String query = "SELECT * FROM client WHERE `" + selectedColumn + "` LIKE '%" + searchText + "%'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Id Client"),
                    rs.getString("NIK"),
                    rs.getString("Nama Client"),
                    rs.getString("Nomor KK"),
                    rs.getString("NPWP"),
                    rs.getString("Asuransi"),
                    rs.getString("Gaji"),
                    rs.getString("Alamat"),
                });
                displayArea.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id Client");
        tbl.addColumn("NIK");
        tbl.addColumn("Nama Client");
        tbl.addColumn("Nomor KK");
        tbl.addColumn("NPWP");
        tbl.addColumn("Asuransi");
        tbl.addColumn("Gaji");
        tbl.addColumn("Alamat");

        try {
            Statement st = (Statement) koneksi.getConnection().createStatement();
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchText = searchField.getText();

            String query = "SELECT * FROM client WHERE `" + selectedColumn + "` LIKE '%" + searchText + "%'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Id Client"),
                    rs.getString("NIK"),
                    rs.getString("Nama Client"),
                    rs.getString("Nomor KK"),
                    rs.getString("NPWP"),
                    rs.getString("Asuransi"),
                    rs.getString("Gaji"),
                    rs.getString("Alamat"),
                });
                displayArea.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }//GEN-LAST:event_searchMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea alamatField;
    private javax.swing.JTextField asuransiField;
    private javax.swing.JLabel back;
    private javax.swing.JTable displayArea;
    private javax.swing.JTextField gajiField;
    private javax.swing.JLabel hapus;
    private javax.swing.JTextField idField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField namaField;
    private javax.swing.JTextField nikField;
    private javax.swing.JTextField nokkField;
    private javax.swing.JTextField npwpField;
    private javax.swing.JLabel search;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel simpan;
    private javax.swing.JLabel ubah;
    // End of variables declaration//GEN-END:variables

  
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AplikasiRumah;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;


/**
 *
 * @author Asus
 */
public class GajiKaryawan extends javax.swing.JFrame {
    public String idkaryawan, namaKaryawan;
    private String currentIdJabatan;

    /**
     * Creates new form GajiKaryawan
     */
    public GajiKaryawan() {
        initComponents();
    }
    
    
//    public void itemTerpilihKaryawan(){ 
//        Popupdatakaryawan cli = new Popupdatakaryawan(); 
//        cli.gajikaryawan= this;  
//        idKaryawanLabel.setText(idkaryawan);
//        namaKaryawanLabel.setText(namaKaryawan);
//    }
    
    private double parseRupiahToDouble(String text) {
    try {
        String clean = text.replaceAll("[^\\d]", ""); // Hapus semua selain angka
        return Double.parseDouble(clean);
        } catch (NumberFormatException e) {
            return 0;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simpan = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        karyawanNamaLabel = new javax.swing.JLabel();
        buttonsearch = new javax.swing.JLabel();
        jabatan = new javax.swing.JLabel();
        gajiPokokJabatan = new javax.swing.JLabel();
        buttonsearch1 = new javax.swing.JLabel();
        gajiPokokLabel = new javax.swing.JLabel();
        bonusLabel = new javax.swing.JLabel();
        rumahTerjualLabel = new javax.swing.JLabel();
        totalGajiLabel = new javax.swing.JLabel();
        simpan1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        simpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpanMouseClicked(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 484, 257, 27));

        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 40, 30, 30));

        idLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idLabelMouseClicked(evt);
            }
        });
        getContentPane().add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 192, 130, 20));

        karyawanNamaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                karyawanNamaLabelMouseClicked(evt);
            }
        });
        getContentPane().add(karyawanNamaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 218, 130, 20));

        buttonsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonsearchMouseClicked(evt);
            }
        });
        getContentPane().add(buttonsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 200, 25));

        jabatan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jabatanMouseClicked(evt);
            }
        });
        getContentPane().add(jabatan, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 192, 130, 20));

        gajiPokokJabatan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gajiPokokJabatanMouseClicked(evt);
            }
        });
        getContentPane().add(gajiPokokJabatan, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 218, 130, 20));

        buttonsearch1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonsearch1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonsearch1MouseEntered(evt);
            }
        });
        getContentPane().add(buttonsearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, 40, 20));
        getContentPane().add(gajiPokokLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 147, 120, 20));
        getContentPane().add(bonusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 174, 120, 20));
        getContentPane().add(rumahTerjualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 200, 120, 20));

        totalGajiLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(totalGajiLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 266, 200, 20));

        simpan1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpan1MouseClicked(evt);
            }
        });
        getContentPane().add(simpan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 250, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Gaji Karyawan.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpanMouseClicked
        // TODO add your handling code here:
        // Validasi input
    if (idLabel.getText().isEmpty() || karyawanNamaLabel.getText().isEmpty() || jabatan.getText().isEmpty() ||
        gajiPokokJabatan.getText().isEmpty() || bonusLabel.getText().isEmpty() || totalGajiLabel.getText().isEmpty()) {
        
        JOptionPane.showMessageDialog(this, "Mohon lengkapi semua data sebelum menyimpan.");
        return;
    }

    try (Connection connection = koneksi.getConnection()) {
        String sql = "INSERT INTO gajikaryawan (id_karyawan, nama_karyawan, jabatan, gaji_pokok, bonus, rumah_terjual, total_gaji) " +
                     "VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pst = connection.prepareStatement(sql);
        
        pst.setString(1, idLabel.getText());
        pst.setString(2, karyawanNamaLabel.getText());
        pst.setString(3, jabatan.getText());

        // Konversi nilai Rupiah menjadi double
        double gajiPokok = parseRupiahToDouble(gajiPokokJabatan.getText());
        double bonus = parseRupiahToDouble(bonusLabel.getText());
        int rumahTerjual = Integer.parseInt(rumahTerjualLabel.getText()); // Jika tidak ada potongan, default 0
        double totalGaji = parseRupiahToDouble(totalGajiLabel.getText());

        pst.setDouble(4, gajiPokok);
        pst.setDouble(5, bonus);
        pst.setInt(6, rumahTerjual);
        pst.setDouble(7, totalGaji);

        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Data gaji berhasil disimpan.");
        
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menyimpan data gaji: " + e.getMessage());
    }
    }//GEN-LAST:event_simpanMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        Transaksi TRANSAKSIPAGE = new Transaksi();
        TRANSAKSIPAGE.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void buttonsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonsearchMouseClicked
        Popupdatakaryawan popup = new Popupdatakaryawan(new Popupdatakaryawan.KaryawanSelectionListener() {
        @Override
        public void onKaryawanSelected(String id, String nama) {
            // Set nilai ke field di GajiKaryawan
            idLabel.setText(id);
            karyawanNamaLabel.setText(nama);
            // Hitung gaji atau operasi lain
//            hitungGajiBerdasarkanKaryawan(id);
        }
    });
    popup.setVisible(true);
//        String idKaryawan = karyawanIdField.getText();
//        if (idKaryawan.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Masukkan ID Karyawan terlebih dahulu.");
//            return;
//        }
//
//        try (Connection connection = koneksi.getConnection()) {
//            String query = "SELECT * FROM karyawan WHERE `Id Karyawan` = ?";
//            PreparedStatement preparedStatement = connection.prepareStatement(query);
//            preparedStatement.setString(1, idKaryawan);
//            ResultSet resultSet = preparedStatement.executeQuery();
//
//            if (resultSet.next()) {
//                // Tampilkan nama karyawan
//                idLabel.setText(resultSet.getString("Id Karyawan"));
//                karyawanNamaLabel.setText(resultSet.getString("Nama Karyawan"));
//            } else {
//                JOptionPane.showMessageDialog(this, "Data karyawan tidak ditemukan.");
//            }
//        } catch (SQLException e) {
//            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencari data karyawan: " + e.getMessage());
//        }
    }//GEN-LAST:event_buttonsearchMouseClicked

    private void buttonsearch1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonsearch1MouseClicked
        // Panggil popup jabatan
    new Popupdatajabatan(new Popupdatajabatan.KaryawanSelectionListener() {
        @Override
        public void onKaryawanSelected(String idJabatan, String namaJabatan, int gajiPokok) {
            // Simpan ID jabatan secara internal
            currentIdJabatan = idJabatan;
            
            // Tampilkan hanya nama jabatan dan gaji pokok
            jabatan.setText(namaJabatan);
            gajiPokokLabel.setText(formatToRupiah(gajiPokok));
            gajiPokokJabatan.setText(formatToRupiah(gajiPokok));
            
            // Lanjutkan dengan pencarian transaksi
            String idKaryawan = idLabel.getText();
            
            if (idKaryawan.isEmpty()) {
                JOptionPane.showMessageDialog(GajiKaryawan.this, "Masukkan ID Karyawan terlebih dahulu.");
                return;
            }

            try (Connection connection = koneksi.getConnection()) {
                // Dapatkan bulan dan tahun saat ini
                Calendar cal = Calendar.getInstance();
                int currentMonth = cal.get(Calendar.MONTH) + 1; // Bulan dimulai dari 0
                int currentYear = cal.get(Calendar.YEAR);
                
                String transaksiQuery = "SELECT COUNT(*) as rumah_terjual, COALESCE(SUM(total_bonus), 0) as total_bonus " +
                                    "FROM transaksi " +
                                    "WHERE karyawan_id = ? " +
                                    "AND MONTH(timestamp) = ? " +  // Filter bulan
                                    "AND YEAR(timestamp) = ?";     // Filter tahun

                PreparedStatement transaksiStatement = connection.prepareStatement(transaksiQuery);
                transaksiStatement.setString(1, idKaryawan);
                transaksiStatement.setInt(2, currentMonth);
                transaksiStatement.setInt(3, currentYear);
                ResultSet transaksiResult = transaksiStatement.executeQuery();

                double totalBonus = 0;
                int rumahTerjual = 0;
                if (transaksiResult.next()) {
                    rumahTerjual = transaksiResult.getInt("rumah_terjual");
                    totalBonus = transaksiResult.getDouble("total_bonus");
                }

                bonusLabel.setText(formatToRupiah(totalBonus));
                rumahTerjualLabel.setText(String.valueOf(rumahTerjual));

                double totalGaji = gajiPokok + totalBonus;
                totalGajiLabel.setText(formatToRupiah(totalGaji));

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(GajiKaryawan.this, 
                    "Terjadi kesalahan saat mencari data: " + e.getMessage());
            }
        }
    }).setVisible(true);
    }//GEN-LAST:event_buttonsearch1MouseClicked

    private String formatToRupiah(double nominal) {
    // Buat DecimalFormat dengan pola khusus
    java.text.DecimalFormat formatter = new java.text.DecimalFormat("#,##0");
    
    // Atur simbol grouping separator menjadi titik
    java.text.DecimalFormatSymbols symbols = new java.text.DecimalFormatSymbols();
    symbols.setGroupingSeparator('.');
    formatter.setDecimalFormatSymbols(symbols);
    
    // Format angka dan pastikan tidak ada desimal
    return formatter.format(nominal);
}
    
    private void karyawanNamaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_karyawanNamaLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_karyawanNamaLabelMouseClicked

    private void idLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_idLabelMouseClicked

    private void gajiPokokJabatanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gajiPokokJabatanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_gajiPokokJabatanMouseClicked

    private void jabatanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jabatanMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jabatanMouseClicked

    private void simpan1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpan1MouseClicked
        // Validasi input
        if (idLabel.getText().isEmpty() || karyawanNamaLabel.getText().isEmpty() || jabatan.getText().isEmpty() ||
            gajiPokokJabatan.getText().isEmpty() || bonusLabel.getText().isEmpty() || totalGajiLabel.getText().isEmpty()) {

            JOptionPane.showMessageDialog(this, "Mohon lengkapi semua data sebelum menyimpan.");
            return;
        }

        try (Connection connection = koneksi.getConnection()) {
            String sql = "INSERT INTO gajikaryawan (id_karyawan, nama_karyawan, jabatan, gaji_pokok, bonus, rumah_terjual, total_gaji) " +
            "VALUES (?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = connection.prepareStatement(sql);

            pst.setString(1, idLabel.getText());
            pst.setString(2, karyawanNamaLabel.getText());
            pst.setString(3, jabatan.getText());

            // Konversi nilai Rupiah menjadi double
            double gajiPokok = parseRupiahToDouble(gajiPokokJabatan.getText());
            double bonus = parseRupiahToDouble(bonusLabel.getText());
            int rumahTerjual = Integer.parseInt(rumahTerjualLabel.getText()); // Jika tidak ada potongan, default 0
            double totalGaji = parseRupiahToDouble(totalGajiLabel.getText());

            pst.setDouble(4, gajiPokok);
            pst.setDouble(5, bonus);
            pst.setInt(6, rumahTerjual);
            pst.setDouble(7, totalGaji);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data gaji berhasil disimpan.");

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data gaji: " + e.getMessage());
        }
    }//GEN-LAST:event_simpan1MouseClicked

    private void buttonsearch1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonsearch1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonsearch1MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GajiKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GajiKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GajiKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GajiKaryawan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GajiKaryawan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JLabel bonusLabel;
    private javax.swing.JLabel buttonsearch;
    private javax.swing.JLabel buttonsearch1;
    private javax.swing.JLabel gajiPokokJabatan;
    private javax.swing.JLabel gajiPokokLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jabatan;
    private javax.swing.JLabel karyawanNamaLabel;
    private javax.swing.JLabel rumahTerjualLabel;
    private javax.swing.JLabel simpan;
    private javax.swing.JLabel simpan1;
    private javax.swing.JLabel totalGajiLabel;
    // End of variables declaration//GEN-END:variables
}

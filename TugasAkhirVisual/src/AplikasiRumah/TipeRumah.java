/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AplikasiRumah;
import java.awt.event.KeyEvent;
import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class TipeRumah extends javax.swing.JFrame {
    private DefaultTableModel tbl;

    /**
     * Creates new form TipeRumah
     */
    public TipeRumah() {
        initComponents();
        tabel();
    }
    
    NumberFormat numberFormat = NumberFormat.getNumberInstance();
//    numberFormat.setMinimumFractionDigits(2); // Pastikan selalu menampilkan 2 digit desimal
//    numberFormat.setMaximumFractionDigits(2);



    private void tabel() {
        Object[] Baris = {
            "Id Rumah",
            "Tipe",
            "Harga Pokok",
            "Luas Bangunan",
            "Luas Tanah",
            "Kamar Tidur",
            "Kamar Mandi",
            "Lantai",
            "Listrik",
            "Sumber Air",
            "Harga Rumah",
            "Deskripsi",
            "Total Bonus"
        };

        tbl = new DefaultTableModel(null, Baris);
        
        try {
        Statement st = koneksi.getConnection().createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM tipe_rumah");
        
        while (rs.next()) {
            tbl.addRow(new Object[]{
                rs.getString("Id Rumah"),
                rs.getString("Tipe"),
                numberFormat.format(rs.getDouble("Harga Pokok")), // Format tanpa simbol mata uang
                numberFormat.format(rs.getDouble("Luas Bangunan")),
                numberFormat.format(rs.getDouble("Luas Tanah")),
                rs.getString("Kamar Tidur"),
                rs.getString("Kamar Mandi"),
                rs.getString("Lantai"),
                rs.getString("Listrik"),
                rs.getString("Sumber Air"),
                numberFormat.format(rs.getDouble("Harga Rumah")), // Format tanpa simbol mata uang
                rs.getString("Deskripsi"),
                numberFormat.format(rs.getDouble("Total Bonus")) // Format tanpa simbol mata uang
            });
        }
        displayArea.setModel(tbl);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }
      
      private void clear() {
        // Clear the input fields
        idField.setText("");
        tipeField.setText("");
        hargaPokokField.setText("");
        hargaRumahField.setText("");
        luasBangunanField.setText("");
        luasTanahField.setText("");
        kamarTidurField.setText("");
        kamarMandiField.setText("");
        bonusPersenField.setText("");
        bonusAmountField.setText("");
        sumberAirField.setText("");
        listrikField.setText("");
        lantaiField.setText("");
        deskripsiField.setText("");
        searchField.setText("");
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JLabel();
        simpan = new javax.swing.JLabel();
        ubah = new javax.swing.JLabel();
        hapus = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        lantaiField = new javax.swing.JTextField();
        listrikField = new javax.swing.JTextField();
        bonusAmountField = new javax.swing.JTextField();
        sumberAirField = new javax.swing.JTextField();
        bonusPersenField = new javax.swing.JTextField();
        kamarMandiField = new javax.swing.JTextField();
        kamarTidurField = new javax.swing.JTextField();
        luasTanahField = new javax.swing.JTextField();
        luasBangunanField = new javax.swing.JTextField();
        hargaRumahField = new javax.swing.JTextField();
        hargaPokokField = new javax.swing.JTextField();
        tipeField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        deskripsiField = new javax.swing.JTextArea();
        search = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 30, 30));

        simpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpanMouseClicked(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(334, 286, 66, 28));

        ubah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ubah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ubahMouseClicked(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 286, 66, 26));

        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hapusMouseClicked(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 286, 66, 26));

        searchField.setBorder(null);
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        getContentPane().add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 349, 144, -1));

        lantaiField.setBackground(new java.awt.Color(229, 245, 255));
        lantaiField.setBorder(null);
        lantaiField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lantaiFieldActionPerformed(evt);
            }
        });
        getContentPane().add(lantaiField, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 246, 137, -1));

        listrikField.setBackground(new java.awt.Color(229, 245, 255));
        listrikField.setBorder(null);
        listrikField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listrikFieldActionPerformed(evt);
            }
        });
        getContentPane().add(listrikField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 246, 137, -1));

        bonusAmountField.setBackground(new java.awt.Color(229, 245, 255));
        bonusAmountField.setBorder(null);
        bonusAmountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bonusAmountFieldActionPerformed(evt);
            }
        });
        getContentPane().add(bonusAmountField, new org.netbeans.lib.awtextra.AbsoluteConstraints(695, 246, 160, -1));

        sumberAirField.setBackground(new java.awt.Color(229, 245, 255));
        sumberAirField.setBorder(null);
        sumberAirField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumberAirFieldActionPerformed(evt);
            }
        });
        getContentPane().add(sumberAirField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 246, 137, -1));

        bonusPersenField.setBackground(new java.awt.Color(229, 245, 255));
        bonusPersenField.setBorder(null);
        bonusPersenField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bonusPersenFieldActionPerformed(evt);
            }
        });
        getContentPane().add(bonusPersenField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 246, 137, -1));

        kamarMandiField.setBackground(new java.awt.Color(229, 245, 255));
        kamarMandiField.setBorder(null);
        kamarMandiField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kamarMandiFieldActionPerformed(evt);
            }
        });
        getContentPane().add(kamarMandiField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 184, 137, -1));

        kamarTidurField.setBackground(new java.awt.Color(229, 245, 255));
        kamarTidurField.setBorder(null);
        kamarTidurField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kamarTidurFieldActionPerformed(evt);
            }
        });
        getContentPane().add(kamarTidurField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 184, 137, -1));

        luasTanahField.setBackground(new java.awt.Color(229, 245, 255));
        luasTanahField.setBorder(null);
        luasTanahField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luasTanahFieldActionPerformed(evt);
            }
        });
        getContentPane().add(luasTanahField, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 184, 137, -1));

        luasBangunanField.setBackground(new java.awt.Color(229, 245, 255));
        luasBangunanField.setBorder(null);
        luasBangunanField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luasBangunanFieldActionPerformed(evt);
            }
        });
        getContentPane().add(luasBangunanField, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 184, 137, -1));

        hargaRumahField.setBackground(new java.awt.Color(229, 245, 255));
        hargaRumahField.setBorder(null);
        hargaRumahField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaRumahFieldActionPerformed(evt);
            }
        });
        getContentPane().add(hargaRumahField, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 122, 137, -1));

        hargaPokokField.setBackground(new java.awt.Color(229, 245, 255));
        hargaPokokField.setBorder(null);
        hargaPokokField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaPokokFieldActionPerformed(evt);
            }
        });
        getContentPane().add(hargaPokokField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 122, 137, -1));

        tipeField.setBackground(new java.awt.Color(229, 245, 255));
        tipeField.setBorder(null);
        tipeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipeFieldActionPerformed(evt);
            }
        });
        getContentPane().add(tipeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 122, 137, -1));

        idField.setBackground(new java.awt.Color(229, 245, 255));
        idField.setBorder(null);
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 122, 137, -1));

        displayArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        displayArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(displayArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 390, 780, 100));

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setHorizontalScrollBar(null);

        deskripsiField.setBackground(new java.awt.Color(229, 245, 255));
        deskripsiField.setColumns(20);
        deskripsiField.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        deskripsiField.setLineWrap(true);
        deskripsiField.setRows(3);
        deskripsiField.setBorder(null);
        deskripsiField.setMaximumSize(new java.awt.Dimension(165, 90));
        jScrollPane2.setViewportView(deskripsiField);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(692, 122, 165, 80));

        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 296, 39, 25));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id Rumah", "Tipe", "Harga Pokok", "Luas Bangunan", "Luas Tanah", "Kamar Tidur", "Kamar Mandi", "Lantai", "Listrik", "Sumber Air", "Harga Rumah", "Deskripsi", "Total Bonus" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 346, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AplikasiRumah/Data Tipe Rumah.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        Master MASTERPAGE = new Master();
        MASTERPAGE.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void simpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpanMouseClicked
        // TODO add your handling code here:
        try {
            String tipe = tipeField.getText();
            if (tipe.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tipe rumah harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            double hargaPokok = hargaPokokField.getText().isEmpty() ? 0 : Double.parseDouble(hargaPokokField.getText().replace(".", "").replace(",", "."));
            double luasBangunan = luasBangunanField.getText().isEmpty() ? 0 : Double.parseDouble(luasBangunanField.getText());
            double luasTanah = luasTanahField.getText().isEmpty() ? 0 : Double.parseDouble(luasTanahField.getText());
            int kamarTidur = kamarTidurField.getText().isEmpty() ? 0 : Integer.parseInt(kamarTidurField.getText());
            String deskripsi = deskripsiField.getText();
            int kamarMandi = kamarMandiField.getText().isEmpty() ? 0 : Integer.parseInt(kamarMandiField.getText());
            int lantai = lantaiField.getText().isEmpty() ? 0 : Integer.parseInt(lantaiField.getText());
            String listrik = listrikField.getText();
            String sumberAir = sumberAirField.getText();
            double hargaRumah = hargaRumahField.getText().isEmpty() ? 0 : Double.parseDouble(hargaRumahField.getText().replace(".", "").replace(",", "."));
            double totalBonus = bonusAmountField.getText().isEmpty() ? 0 : Double.parseDouble(bonusAmountField.getText().replace(".", "").replace(",", "."));

            String query = "INSERT INTO tipe_rumah (Tipe, `Harga Pokok`, `Luas Bangunan`, `Luas Tanah`, `Kamar Tidur`, " +
                          "Deskripsi, `Kamar Mandi`, `Lantai`, Listrik, `Sumber Air`, `Harga Rumah`, `Total Bonus`) " +
                          "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            
            try (Connection connection = koneksi.getConnection();
                 PreparedStatement preparedStatement = connection.prepareStatement(query, Statement.RETURN_GENERATED_KEYS)) {
                
                preparedStatement.setString(1, tipe);
                preparedStatement.setDouble(2, hargaPokok);
                preparedStatement.setDouble(3, luasBangunan);
                preparedStatement.setDouble(4, luasTanah);
                preparedStatement.setInt(5, kamarTidur);
                preparedStatement.setString(6, deskripsi);
                preparedStatement.setInt(7, kamarMandi);
                preparedStatement.setInt(8, lantai);
                preparedStatement.setString(9, listrik);
                preparedStatement.setString(10, sumberAir);
                preparedStatement.setDouble(11, hargaRumah);
                preparedStatement.setDouble(12, totalBonus);
                
                int affectedRows = preparedStatement.executeUpdate();
                
                if (affectedRows > 0) {
                    try (ResultSet generatedKeys = preparedStatement.getGeneratedKeys()) {
                        if (generatedKeys.next()) {
                            idField.setText(String.valueOf(generatedKeys.getInt(1)));
                        }
                    }
                    JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    tabel();
                    clear();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menambahkan data", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format angka tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_simpanMouseClicked

    private void ubahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ubahMouseClicked
        // TODO add your handling code here:
        try {
            if (idField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Pilih data yang akan diupdate terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int id = Integer.parseInt(idField.getText());
            String tipe = tipeField.getText();
            double hargaPokok = hargaPokokField.getText().isEmpty() ? 0 : Double.parseDouble(hargaPokokField.getText().replace(".", "").replace(",", "."));
            double luasBangunan = luasBangunanField.getText().isEmpty() ? 0 : Double.parseDouble(luasBangunanField.getText());
            double luasTanah = luasTanahField.getText().isEmpty() ? 0 : Double.parseDouble(luasTanahField.getText());
            int kamarTidur = kamarTidurField.getText().isEmpty() ? 0 : Integer.parseInt(kamarTidurField.getText());
            String deskripsi = deskripsiField.getText();
            int kamarMandi = kamarMandiField.getText().isEmpty() ? 0 : Integer.parseInt(kamarMandiField.getText());
            int lantai = lantaiField.getText().isEmpty() ? 0 : Integer.parseInt(lantaiField.getText());
            String listrik = listrikField.getText();
            String sumberAir = sumberAirField.getText();
            double hargaRumah = hargaRumahField.getText().isEmpty() ? 0 : Double.parseDouble(hargaRumahField.getText().replace(".", "").replace(",", "."));
            double totalBonus = bonusAmountField.getText().isEmpty() ? 0 : Double.parseDouble(bonusAmountField.getText().replace(".", "").replace(",", "."));

            String query = "UPDATE tipe_rumah SET Tipe = ?, `Harga Pokok` = ?, `Luas Bangunan` = ?, `Luas Tanah` = ?, " +
                          "`Kamar Tidur` = ?, Deskripsi = ?, `Kamar Mandi` = ?, Lantai = ?, Listrik = ?, `Sumber Air` = ?, " +
                          "`Harga Rumah` = ?, `Total Bonus` = ? WHERE `Id Rumah` = ?";
            
            try (Connection connection = koneksi.getConnection();
                 PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                
                preparedStatement.setString(1, tipe);
                preparedStatement.setDouble(2, hargaPokok);
                preparedStatement.setDouble(3, luasBangunan);
                preparedStatement.setDouble(4, luasTanah);
                preparedStatement.setInt(5, kamarTidur);
                preparedStatement.setString(6, deskripsi);
                preparedStatement.setInt(7, kamarMandi);
                preparedStatement.setInt(8, lantai);
                preparedStatement.setString(9, listrik);
                preparedStatement.setString(10, sumberAir);
                preparedStatement.setDouble(11, hargaRumah);
                preparedStatement.setDouble(12, totalBonus);
                preparedStatement.setInt(13, id);
                
                int affectedRows = preparedStatement.executeUpdate();
                
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diupdate!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    tabel();
                    clear();
                } else {
                    JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format angka tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ubahMouseClicked

    private void hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseClicked
        // TODO add your handling code here:
        try {
            if (idField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int id = Integer.parseInt(idField.getText());
            
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            
            if (confirm == JOptionPane.YES_OPTION) {
                String query = "DELETE FROM tipe_rumah WHERE `Id Rumah` = ?";
                try (Connection connection = koneksi.getConnection();
                     PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    preparedStatement.setInt(1, id);
                    int affectedRows = preparedStatement.executeUpdate();
                    
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                        tabel();
                        clear();
                    } else {
                        JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hapusMouseClicked

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id Rumah");
        tbl.addColumn("Tipe");
        tbl.addColumn("Harga Pokok");
        tbl.addColumn("Luas Bangunan");
        tbl.addColumn("Luas Tanah");
        tbl.addColumn("Kamar Tidur");
        tbl.addColumn("Kamar Mandi");
        tbl.addColumn("Lantai");
        tbl.addColumn("Listrik");
        tbl.addColumn("Sumber Air");
        tbl.addColumn("Harga Rumah");
        tbl.addColumn("Deskripsi");
        tbl.addColumn("Total Bonus");

        try {
            Statement st = (Statement) koneksi.getConnection().createStatement();
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchText = searchField.getText();

            String query = "SELECT * FROM tipe_rumah WHERE `" + selectedColumn + "` LIKE '%" + searchText + "%'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Id Rumah"),
                rs.getString("Tipe"),
                numberFormat.format(rs.getDouble("Harga Pokok")), // Format tanpa simbol mata uang
                numberFormat.format(rs.getDouble("Luas Bangunan")),
                numberFormat.format(rs.getDouble("Luas Tanah")),
                rs.getString("Kamar Tidur"),
                rs.getString("Kamar Mandi"),
                rs.getString("Lantai"),
                rs.getString("Listrik"),
                rs.getString("Sumber Air"),
                numberFormat.format(rs.getDouble("Harga Rumah")), // Format tanpa simbol mata uang
                rs.getString("Deskripsi"),
                numberFormat.format(rs.getDouble("Total Bonus")) // Format tanpa simbol mata uang
                });
                displayArea.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }//GEN-LAST:event_searchFieldActionPerformed

    private void kamarTidurFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kamarTidurFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kamarTidurFieldActionPerformed

    private void luasTanahFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luasTanahFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_luasTanahFieldActionPerformed

    private void luasBangunanFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luasBangunanFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_luasBangunanFieldActionPerformed

    private void hargaRumahFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaRumahFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaRumahFieldActionPerformed

    private void hargaPokokFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaPokokFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaPokokFieldActionPerformed

    private void tipeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipeFieldActionPerformed
        // TODO add your handling code here:
        String tipe = tipeField.getText().trim();
        if (!tipe.isEmpty()) {
            try {
                double totalHargaPokok = 0.0;
                boolean dataFound = false;
                
                String query = "SELECT Harga FROM rab WHERE Tipe = ?";
                try (Connection connection = koneksi.getConnection();
                     PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    preparedStatement.setString(1, tipe);
                    ResultSet resultSet = preparedStatement.executeQuery();
                    
                    while (resultSet.next()) {
                        totalHargaPokok += resultSet.getDouble("Harga");
                        dataFound = true;
                    }
                    
                    if (dataFound) {
                        hargaPokokField.setText(numberFormat.format(totalHargaPokok));
                    } else {
                        hargaPokokField.setText("0");
                        JOptionPane.showMessageDialog(this, 
                            "Tidak ditemukan data RAB untuk tipe " + tipe, 
                            "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, 
                    "Error menghitung harga pokok: " + e.getMessage(), 
                    "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_tipeFieldActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
        try{
            Statement st = (Statement)  koneksi.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM tipe_rumah WHERE `tipe_rumah` . `Id Rumah`= '"+idField.getText()+"'");

            while (rs.next()) {
                idField.setText(rs.getString("Id Rumah"));
                tipeField.setText(rs.getString("Tipe"));
                hargaPokokField.setText(rs.getString("Harga Pokok"));
                hargaRumahField.setText(rs.getString("Harga Rumah"));
                luasBangunanField.setText(rs.getString("Luas Bangunan"));
                luasTanahField.setText(rs.getString("Luas Tanah"));
                kamarTidurField.setText(rs.getString("Kamar Tidur"));
                deskripsiField.setText(rs.getString("Deskripsi"));
                kamarMandiField.setText(rs.getString("Kamar Mandi"));
                lantaiField.setText(rs.getString("Lantai"));
                listrikField.setText(rs.getString("Listrik"));
                sumberAirField.setText(rs.getString("Sumber Air"));
                bonusAmountField.setText(rs.getString("Total Bonus"));
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"GAGAL");
        }
    }//GEN-LAST:event_idFieldActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id Client");
        tbl.addColumn("NIK");
        tbl.addColumn("Nama Client");
        tbl.addColumn("Nomor KK");
        tbl.addColumn("NPWP");
        tbl.addColumn("Asuransi");
        tbl.addColumn("Gaji");
        tbl.addColumn("Alamat");

        try {
            Statement st = (Statement) koneksi.getConnection().createStatement();
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchText = searchField.getText();

            String query = "SELECT * FROM tipe_rumah WHERE `" + selectedColumn + "` LIKE '%" + searchText + "%'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Id Rumah"),
                rs.getString("Tipe"),
                numberFormat.format(rs.getDouble("Harga Pokok")), // Format tanpa simbol mata uang
                numberFormat.format(rs.getDouble("Luas Bangunan")),
                numberFormat.format(rs.getDouble("Luas Tanah")),
                rs.getString("Kamar Tidur"),
                rs.getString("Kamar Mandi"),
                rs.getString("Lantai"),
                rs.getString("Listrik"),
                rs.getString("Sumber Air"),
                numberFormat.format(rs.getDouble("Harga Rumah")), // Format tanpa simbol mata uang
                rs.getString("Deskripsi"),
                numberFormat.format(rs.getDouble("Total Bonus")) // Format tanpa simbol mata uang
                });
                displayArea.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }//GEN-LAST:event_searchMouseClicked

    private void kamarMandiFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kamarMandiFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kamarMandiFieldActionPerformed

    private void lantaiFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lantaiFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lantaiFieldActionPerformed

    private void listrikFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listrikFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listrikFieldActionPerformed

    private void sumberAirFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumberAirFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sumberAirFieldActionPerformed

    private void bonusPersenFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bonusPersenFieldActionPerformed
        // TODO add your handling code here:
        try {
        if (hargaRumahField.getText().isEmpty() || bonusPersenField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harga rumah dan persen bonus harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double hargaRumah = Double.parseDouble(hargaRumahField.getText().replace(",", ""));
        double persenBonus = Double.parseDouble(bonusPersenField.getText());
        double totalBonus = (persenBonus / 100) * hargaRumah;
        
        // Ganti currencyFormat dengan numberFormat
        bonusAmountField.setText(numberFormat.format(totalBonus));
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Format angka tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_bonusPersenFieldActionPerformed

    private void bonusAmountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bonusAmountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bonusAmountFieldActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void displayAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayAreaMouseClicked
        // TODO add your handling code here:
        // Get selected row
        int selectedRow = displayArea.getSelectedRow();

        // Get values from selected row
        String id = tbl.getValueAt(selectedRow, 0).toString();
        String tipe = tbl.getValueAt(selectedRow, 1).toString();
        String hp = tbl.getValueAt(selectedRow, 2).toString();
        String hr = tbl.getValueAt(selectedRow, 10).toString();
        String lb = tbl.getValueAt(selectedRow, 3).toString();
        String lt = tbl.getValueAt(selectedRow, 4).toString();
        String kt = tbl.getValueAt(selectedRow, 5).toString();
        String desk = tbl.getValueAt(selectedRow, 11).toString();
        String km = tbl.getValueAt(selectedRow, 6).toString();
        String lantai = tbl.getValueAt(selectedRow, 7).toString();
        String listrik = tbl.getValueAt(selectedRow, 8).toString();
        String air = tbl.getValueAt(selectedRow, 9).toString();
        String b = tbl.getValueAt(selectedRow, 12).toString();

        // Set values to form fields
        idField.setText(id);
        tipeField.setText(tipe);
        hargaPokokField.setText(hp);
//        hargaRumahField.setText(hr);
        hargaRumahField.setText(hr.replace(".", ""));
        luasBangunanField.setText(lb.replace(".", ""));
        luasTanahField.setText(lt.replace(".", ""));
        kamarTidurField.setText(kt);
        deskripsiField.setText(desk);
        kamarMandiField.setText(km);
        lantaiField.setText(lantai);
        listrikField.setText(listrik);
        sumberAirField.setText(air);
        bonusAmountField.setText(b);
        }

        private void txtcariKeyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                tabel();
            }
    }//GEN-LAST:event_displayAreaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TipeRumah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TipeRumah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TipeRumah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TipeRumah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TipeRumah().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JTextField bonusAmountField;
    private javax.swing.JTextField bonusPersenField;
    private javax.swing.JTextArea deskripsiField;
    private javax.swing.JTable displayArea;
    private javax.swing.JLabel hapus;
    private javax.swing.JTextField hargaPokokField;
    private javax.swing.JTextField hargaRumahField;
    private javax.swing.JTextField idField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField kamarMandiField;
    private javax.swing.JTextField kamarTidurField;
    private javax.swing.JTextField lantaiField;
    private javax.swing.JTextField listrikField;
    private javax.swing.JTextField luasBangunanField;
    private javax.swing.JTextField luasTanahField;
    private javax.swing.JLabel search;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel simpan;
    private javax.swing.JTextField sumberAirField;
    private javax.swing.JTextField tipeField;
    private javax.swing.JLabel ubah;
    // End of variables declaration//GEN-END:variables

}

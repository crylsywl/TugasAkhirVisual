/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AplikasiRumah;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class RAB extends javax.swing.JFrame {

    /**
     * Creates new form RAB
     */
    public RAB() {
        initComponents();
        tabel();
    }
    
    private void tabel() {
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id RAB");
        tbl.addColumn("Tipe");
        tbl.addColumn("Keterangan");
        tbl.addColumn("Harga");
        
        try {
            Statement st = (Statement)  koneksi.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM rab");
            
            while (rs.next()){
             tbl.addRow(new Object[]{
                rs.getString("Id RAB"),
                rs.getString("Tipe"),
                rs.getString("Keterangan"),
                rs.getString("Harga"),
         
            });
             displayArea.setModel(tbl); 
        }
 //           JOptionPane.showMessageDialog(null, "Koneksi Database  Berhasil");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }
      
      private void clear() {
        // Clear the input fields
        idField.setText("");
        tipeField.setText("");
        keteranganField.setText("");
        hargaField.setText("");
        searchField.setText("");
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idField = new javax.swing.JTextField();
        tipeField = new javax.swing.JTextField();
        hargaField = new javax.swing.JTextField();
        keteranganField = new javax.swing.JTextField();
        simpan = new javax.swing.JLabel();
        ubah = new javax.swing.JLabel();
        hapus = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        search = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        idField.setBackground(new java.awt.Color(229, 245, 255));
        idField.setBorder(null);
        idField.setOpaque(false);
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 156, 240, -1));

        tipeField.setBackground(new java.awt.Color(229, 245, 255));
        tipeField.setBorder(null);
        tipeField.setOpaque(false);
        tipeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipeFieldActionPerformed(evt);
            }
        });
        getContentPane().add(tipeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 240, -1));

        hargaField.setBackground(new java.awt.Color(229, 245, 255));
        hargaField.setBorder(null);
        hargaField.setOpaque(false);
        getContentPane().add(hargaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 378, 240, -1));

        keteranganField.setBackground(new java.awt.Color(229, 245, 255));
        keteranganField.setBorder(null);
        keteranganField.setOpaque(false);
        getContentPane().add(keteranganField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 304, 240, -1));

        simpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpanMouseClicked(evt);
            }
        });
        getContentPane().add(simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 68, 30));

        ubah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ubah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ubahMouseClicked(evt);
            }
        });
        getContentPane().add(ubah, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 420, 68, 30));

        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hapusMouseClicked(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 68, 30));

        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 30, 30));

        searchField.setBorder(null);
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        getContentPane().add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 93, 140, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Id RAB", "Tipe", "Keterangan", "Harga" }));
        jComboBox1.setOpaque(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, -1, -1));

        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(501, 90, 39, 25));

        displayArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id RAB", "Tipe", "Keterangan", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(displayArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 500, 350));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AplikasiRumah/Data RAB.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
        try{
            Statement st = (Statement)  koneksi.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM rab WHERE `rab` . `Id RAB`= '"+idField.getText()+"'");

            while (rs.next()) {
                idField.setText(rs.getString("Id RAB"));
                tipeField.setText(rs.getString("Tipe"));
                keteranganField.setText(rs.getString("Keterangan"));
                hargaField.setText(rs.getString("Harga"));
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"GAGAL");
        }
        tabel();
    }//GEN-LAST:event_idFieldActionPerformed

    private void tipeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipeFieldActionPerformed

    private void simpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpanMouseClicked
        // TODO add your handling code here:
        String tipe = tipeField.getText();
        String keterangan = keteranganField.getText();
        double harga = Double.parseDouble(hargaField.getText());

        String query = "INSERT INTO rab (Tipe, Keterangan, Harga) VALUES (?, ?, ?)";
        try (Connection connection = koneksi.getConnection();
             PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setString(1, tipe);
            preparedStatement.setString(2, keterangan);
            preparedStatement.setDouble(3, harga);
            preparedStatement.executeUpdate();
            tabel();
            clear();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_simpanMouseClicked

    private void ubahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ubahMouseClicked
        // TODO add your handling code here:
        try {
            // Validasi ID harus diisi
            if (idField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID RAB harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int id = Integer.parseInt(idField.getText());

            // Ambil data yang sudah ada dari database
            try (Connection connection = koneksi.getConnection()) {
                String selectQuery = "SELECT * FROM rab WHERE `Id RAB` = ?";
                PreparedStatement selectStatement = connection.prepareStatement(selectQuery);
                selectStatement.setInt(1, id);
                ResultSet resultSet = selectStatement.executeQuery();

                if (resultSet.next()) {
                    // Gunakan nilai dari database jika field tidak diubah
                    String tipe = tipeField.getText().isEmpty() ? resultSet.getString("Tipe") : tipeField.getText();
                    String keterangan = keteranganField.getText().isEmpty() ? resultSet.getString("Keterangan") : keteranganField.getText();
                    double harga = hargaField.getText().isEmpty() ? resultSet.getDouble("Harga") : Double.parseDouble(hargaField.getText());

                    // Query untuk update data
                    String updateQuery = "UPDATE rab SET Tipe = ?, Keterangan = ?, Harga = ? WHERE `Id RAB` = ?";
                    PreparedStatement updateStatement = connection.prepareStatement(updateQuery);
                    updateStatement.setString(1, tipe);
                    updateStatement.setString(2, keterangan);
                    updateStatement.setDouble(3, harga);
                    updateStatement.setInt(4, id);

                    int rowsAffected = updateStatement.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Data RAB berhasil diupdate!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                        tabel();
                        clear();
                    } else {
                        JOptionPane.showMessageDialog(this, "Gagal mengupdate data RAB", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Data RAB dengan ID tersebut tidak ditemukan", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Format angka tidak valid", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ubahMouseClicked

    private void hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseClicked
        // TODO add your handling code here:
        int id = Integer.parseInt(idField.getText());

        String query = "DELETE FROM rab WHERE `Id RAB` = ?";
        try (Connection connection = koneksi.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
            tabel();
            clear();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_hapusMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        Master MASTERPAGE = new Master();
        MASTERPAGE.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id RAB");
        tbl.addColumn("Tipe");
        tbl.addColumn("Keterangan");
        tbl.addColumn("Harga");

        try {
            Statement st = (Statement) koneksi.getConnection().createStatement();
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchText = searchField.getText();

            String query = "SELECT * FROM rab WHERE `" + selectedColumn + "` LIKE '%" + searchText + "%'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Id RAB"),
                    rs.getString("Tipe"),
                    rs.getString("Keterangan"),
                    rs.getString("Harga"),
                });
                displayArea.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }//GEN-LAST:event_searchFieldActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("Id RAB");
        tbl.addColumn("Tipe");
        tbl.addColumn("Keterangan");
        tbl.addColumn("Harga");

        try {
            Statement st = (Statement) koneksi.getConnection().createStatement();
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchText = searchField.getText();

            String query = "SELECT * FROM rab WHERE `" + selectedColumn + "` LIKE '%" + searchText + "%'";
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("Id RAB"),
                    rs.getString("Tipe"),
                    rs.getString("Keterangan"),
                    rs.getString("Harga"),
                });
                displayArea.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Koneksi Database Gagal" + e.getMessage());
        }
    }//GEN-LAST:event_searchMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RAB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RAB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JTable displayArea;
    private javax.swing.JLabel hapus;
    private javax.swing.JTextField hargaField;
    private javax.swing.JTextField idField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField keteranganField;
    private javax.swing.JLabel search;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel simpan;
    private javax.swing.JTextField tipeField;
    private javax.swing.JLabel ubah;
    // End of variables declaration//GEN-END:variables
}
